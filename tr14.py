# -*- coding: utf-8 -*-
"""tr14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NmqtdNNXRlRdM9j24hdVPDzPVum-OM7X
"""

import pickle
import streamlit as st
import re
import string
import nltk
import spacy
from sklearn.feature_extraction.text import TfidfVectorizer
tf1 = TfidfVectorizer()

model_filename = 'svm_model.pkl'
with open(model_filename, 'rb') as model_file:
    model = pickle.load(model_file)
import nltk
nltk.download('stopwords')

stopwords = nltk.corpus.stopwords.words('english')

def clean_text(text):
    text = text.lower()
    return text.strip()

def remove_punctuation(text):
    punctuation_free = "".join([i for i in text if i not in string.punctuation])
    return punctuation_free

def tokenization(text):
    tokens = re.split(' ', text)
    return tokens

def remove_stopwords(text):
    stopwords = nltk.corpus.stopwords.words('english')
    output = " ".join(i for i in text if i not in stopwords)
    return output

def lemmatizer(text):
    nlp = spacy.load('en_core_web_sm')
    doc = nlp(text)
    sent = [token.lemma_ for token in doc if not token.text in set(stopwords)]
    return ' '.join(sent)

def preprocess_text(text):
    text = clean_text(text)
    text = remove_punctuation(text)
    text = text.lower()
    text = tokenization(text)
    text = remove_stopwords(text)
    text = lemmatizer(text)
    return text

st.title("Sentiment Analysis with SVM Model")

st.write("Enter a review text, and the model will predict its sentiment (e.g., positive or negative).")

input_text = st.text_area("Enter a review:", "")

if st.button("Predict"):
    if input_text:
        preprocessed_text = preprocess_text(input_text)
        text_vectorized = tf1.fit_transform([preprocessed_text])
        prediction = model.predict(text_vectorized)
        sentiment = "Positive" if prediction == 1 else "Negative"
        st.write("Sentiment:", sentiment)
    else:
        st.write("Please enter a review text.")

import streamlit as st
import pickle
from sklearn.feature_extraction.text import TfidfVectorizer
from PIL import Image
import re
import string
import nltk
import spacy
import sklearn
import joblib

# Check the version of Streamlit
print(f"Streamlit version: {st.__version__}")

# Check the version of PIL (Pillow)
pillow_version = Image.__version__
print(f"Pillow version: {pillow_version}")

# Check the version of re (regular expressions)
print(f"Python re (regular expressions) version: {re.__version__}")

# Check the version of NLTK (Natural Language Toolkit)
nltk_version = nltk.__version__
print(f"NLTK version: {nltk_version}")

# Check the version of spaCy
spacy_version = spacy.__version__
print(f"spaCy version: {spacy_version}")

# Check the version of scikit-learn
sklearn_version = sklearn.__version__
print(f"scikit-learn version: {sklearn_version}")

# Check the version of joblib
joblib_version = joblib.__version__
print(f"joblib version: {joblib_version}")

pip install -q streamlit

